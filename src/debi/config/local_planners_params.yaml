#GlobalPlannerParams
global_planner/GlobalPlanner:
  allow_unknown: true
  default_tolerance: 10   #tolerance on the goal point for the planner
  visualize_potential: true
  use_dijkstra: false   #If true, use dijkstra's algorithm. Otherwise, A*
  
  lethal_cost: 253
  neutral_cost: 66
  cost_factor: 0.55


#LocalPlannerParams
DWAPlannerROS:  
  recovery_behavior_enabled: true 
  #RobotConfigurationParams
  acc_lim_x: 2.5        #The x acceleration limit of the robot in meters/sec^2
  acc_lim_y: 0.0        #The y acceleration limit of the robot in meters/sec^2
  acc_lim_theta: 3.2    #The rotational acceleration limit of the robot in rad/sec^2

  max_vel_x: 0.45       #The maximum x velocity for the robot in m/s
  min_vel_x: -0.45      #The minimum x velocity for the robot in m/s, (negative for backwards motion)
  max_vel_y: 0.0        #The maximum y velocity for the robot in m/s
  min_vel_y: 0.0        #The minimum y velocity for the robot in m/s

  max_vel_trans: 0.55   #The absolute value of the maximum translational velocity for the robot in m/s
  min_vel_trans: 0.13   #The absolute value of the minimum translational velocity for the robot in m/s

  max_rot_vel: 1.0      #The absolute value of the maximum rotational velocity for the robot in rad/s
  min_rot_vel: 0.4      #The absolute value of the minimum rotational velocity for the robot in rad/s

  #GoalToleranceParameters
  yaw_goal_tolerance: 0.1   #The tolerance in rads for the controller in yaw/rotation when achieving its goal
  xy_goal_tolerance: 0.01   #The tolerance in meters for the controller in the x & y distance when achieving a goal

  #ForwardSimulationParameters   
  sim_time: 2.0               #The amount of time to simulate forward in seconds
  vx_samples: 20              #The number of x velocity samples to take when simulating
  vy_samples: 0               #The number of y velocity samples to take when simulating
  vth_samples: 40             #The number of theta velocity samples to take when simulating
  controller_frequency: 10.0  

  #TrajectoryScoringParameters  
  path_distance_bias: 32.0          #The weight to give to the distance of the robot's path to the goal
  goal_distance_bias: 24.0          #The weight to give to the distance of the robot to the goal
  occdist_scale: 0.01               #The weight to give to the distance of the robot to obstacles
  forward_point_distance: 0.3       #The distance in meters to place a simulated point on the robot's path to score
  stop_time_buffer: 0.3             #The amount of time in seconds to add to the robot's stop time when scoring a trajectory
  scaling_speed: 0.25               #The speed at which to scale the robot's velocity when scoring a trajectory 
  max_scaling_factor: 0.2           #The maximum scaling factor to apply to the robot's velocity when scoring a trajectory


  


